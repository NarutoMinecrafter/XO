{"version":3,"sources":["index.jsx"],"names":["game","win","App","useState","player","setPlayer","end","setEnd","useEffect","className","map","el","XO","id","editor","onClick","value","setValue","forEach","e","alert","disabled","ReactDOM","render","document","getElementById"],"mappings":"6JAKIA,G,MAAO,IACLC,EAAM,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHC,EAAM,WAAO,IAAD,EAEYC,oBAAS,GAFrB,mBAETC,EAFS,KAEDC,EAFC,OAGMF,oBAAS,GAHf,mBAGTG,EAHS,KAGJC,EAHI,KAchBC,qBAAU,WACRD,GAAO,KACN,CAACD,IAGJ,OAAIA,EAAY,wBACJ,qCACV,wBAAQG,UAAU,MAAlB,SAHQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAI1BC,KAAI,SAACC,GAAD,OAAQ,cAACC,EAAD,CAAIC,GAAIF,EAAaJ,OAAQA,EAAQO,OAAQ,WAhBhET,GAAWD,IAgBqEC,UAAWA,EAAWD,OAAQA,GAA1EO,QAEpC,iCACE,wBAAQI,QAhBI,WACdR,GAAO,GACPF,GAAU,IAckBI,UAAU,UAApC,6FAKAG,EAAK,SAAC,GAA+C,IAA7CE,EAA4C,EAA5CA,OAAQV,EAAoC,EAApCA,OAAQS,EAA4B,EAA5BA,GAAIN,EAAwB,EAAxBA,OAAQF,EAAgB,EAAhBA,UAAgB,EAC9BF,qBAD8B,mBACjDa,EADiD,KAC1CC,EAD0C,KAoBxD,OAZAjB,EAAKa,GAAMG,EAEXR,qBAAU,WACRP,EAAIiB,SAAQ,SAAAC,GACNnB,EAAKmB,EAAE,KAAOnB,EAAKmB,EAAE,KAAOnB,EAAKmB,EAAE,KAAOnB,EAAKmB,EAAE,MAAQnB,EAAKmB,EAAE,KAAOnB,EAAKmB,EAAE,MAAQnB,EAAKmB,EAAE,MAC/FC,MAAM,6EAAmBJ,GACzBX,GAAU,GACVE,GAAO,SAGV,CAACS,IAEG,wBAAQP,UAAU,KAAKM,QAjBjB,WACXD,IACAG,GAAoB,IAAXb,EAAkB,SAAM,WAeUiB,SAAUL,EAAhD,SAAyDA,KAGlEM,IAASC,OAAQ,cAACrB,EAAD,IAASsB,SAASC,eAAe,W","file":"static/js/main.57d414e8.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { useEffect, useState } from 'react'\n\nlet game = {}\nconst win = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n]\n\nconst App = () => {\n\n  const [player, setPlayer] = useState(true)\n  const [end, setEnd] = useState(false)\n\n  const editor = () => {\n    setPlayer(!player)\n  }\n\n  const newGame = () => {\n    setEnd(true)\n    setPlayer(true)\n  }\n\n  useEffect(() => {\n    setEnd(false)\n  }, [end])\n\n  let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n  if (end) return <div />\n  else return <>\n    <center className='App' >\n      {arr.map((el) => <XO id={el} key={el} setEnd={setEnd} editor={() => editor()} setPlayer={setPlayer} player={player} ></XO>)}\n    </center>\n    <center>\n      <button onClick={newGame} className='newGame' >Начать заново</button>\n    </center>\n  </>\n}\n\nconst XO = ({ editor, player, id, setEnd, setPlayer }) => {\n  const [value, setValue] = useState()\n\n  const edit = () => {\n    editor()\n    setValue(player === true ? '✖' : '〇')\n  }\n\n  game[id] = value\n\n  useEffect(() => {\n    win.forEach(e => {\n      if (game[e[0]] && game[e[1]] && game[e[2]] && game[e[0]] === game[e[1]] && game[e[1]] === game[e[2]]) {\n        alert('Выиграл игрок ' + value)\n        setPlayer(true)\n        setEnd(true)\n      }\n    })\n  }, [value])\n\n  return <button className='xo' onClick={edit} disabled={value} >{value}</button>\n}\n\nReactDOM.render( <App />, document.getElementById('root') )"],"sourceRoot":""}